name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'Readme.md'

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug Environment Variables
        run: |
          echo "Checking if secrets are available..."
          echo "SONARQUBE_HOST=${{ secrets.SONARQUBE_HOST }}"
          echo "Checking Docker Status..."
          docker version

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/application-game:${{ github.run_id }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            SONARQUBE_HOST=${{ secrets.SONARQUBE_HOST }}
            SONARQUBE_TOKEN=${{ secrets.SONARQUBE_TOKEN }}

      - name: Start SonarQube (if needed)
        run: |
          docker run -d --name sonar \
            -p 9000:9000 \
            sonarqube:lts
          echo "Waiting for SonarQube to be ready..."
          until curl -s ${{ secrets.SONARQUBE_HOST }}/api/system/status | grep -q '"status":"UP"'; do
            echo "Waiting for SonarQube..."
            sleep 1
          done

      - name: Install SonarQube Scanner
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre unzip
          wget -O sonar-scanner.zip "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip"
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-*/ /opt/sonar-scanner
          echo "export PATH=\"$PATH:/opt/sonar-scanner/bin\"" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Verify SonarQube Connection
        run: |
          echo "Testing connection to SonarQube..."
          curl -I ${{ secrets.SONARQUBE_HOST }} || exit 1

      - name: Run SonarQube Scanner
        env:
          SONAR_SCANNER_OPTS: "-Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}"
        run: |
          hostname -I

          curl -u admin:admin -X POST "http://localhost:9000/api/projects/create?project=test_project&name=Test_Project"
                    
          export SONAR_TOKEN=$(curl -s -u "admin:admin" -X POST \
          "http://localhost:9000/api/user_tokens/generate" \
          -d "name=my-auto-token&login=admin" | grep -o '"token":"[^"]*' | cut -d '"' -f 4)
          
          curl -u admin:admin "http://localhost:9000/api/projects/search"
          mkdir /home/runner/work/Automated-CI-CD/Automated-CI-CD/src
          /opt/sonar-scanner/bin/sonar-scanner \
          -Dsonar.projectKey=test_project \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.projectBaseDir=$(pwd)

          curl -I http://localhost:9000/dashboard?id=test_project


  update-helm-chart:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Tag
        run: |
          sed -i 's/tag: .*/tag: "${{ github.run_id }}"/' application-game-charts/values.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.email "omraut0508@gmail.com"
          git config --global user.name "om0508"
          git stash
          git pull origin main --rebase 
          git stash pop
          git add application-game-charts/values.yaml
          git commit -m "Update tag in Helm chart"
          git push origin main
