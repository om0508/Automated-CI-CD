name: CI/CD Pipeline - Secure Build, Scan & Deployment

permissions:
  contents: write

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'Readme.md'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Debug Environment Variables
        run: |
          echo "Checking if secrets are available..."
          echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}"
          echo "Checking Docker Status..."
          docker version
      
      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/application-game:${{ github.run_id }}
          platforms: linux/amd64,linux/arm64

  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  owasp-dependency-check:
    name: OWASP Dependency-Check
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install .NET 6.0 Runtime (Required for Dependency-Check)
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0 || sudo apt-get install -y dotnet-runtime-6.0
      
      - name: Download and Extract OWASP Dependency-Check
        run: |
          curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip -o dependency-check-8.4.0-release.zip -d dependency-check
          mv dependency-check/dependency-check/* dependency-check/
      
      - name: Run OWASP Dependency-Check
        run: |
          chmod +x dependency-check/bin/dependency-check.sh
          dependency-check/bin/dependency-check.sh --scan . --format "HTML" --out reports || { echo "Dependency-Check failed!"; exit 1; }
      
      - name: Upload OWASP Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OWASP-Dependency-Check-Report
          path: reports/

  update-helm-chart:
    runs-on: ubuntu-latest
    needs: owasp-dependency-check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.email "omraut0508@gmail.com"
          git config --global user.name "om0508"
      
      - name: Update Helm Chart Tag
        run: |
          sed -i "s/tag: .*/tag: \"${{ github.run_id }}\"/" application-game-charts/values.yaml
      
      - name: Commit Changes
        run: |
          git add application-game-charts/values.yaml
          git commit -m "Update tag in Helm chart" || echo "No changes to commit."
      
      - name: Pull Latest Changes and Handle Conflicts
        run: |
          git fetch origin main
          git stash
          git checkout main
          git pull origin main --rebase || (git rebase --abort && git pull --no-rebase)
          git stash pop || echo "No stashed changes to apply"

          # Auto-resolve conflicts if any occur
          if git diff --name-only --diff-filter=U | grep -q "application-game-charts/values.yaml"; then
            echo "Merge conflict detected in values.yaml. Resolving automatically..."
            git checkout --theirs application-game-charts/values.yaml
            git add application-game-charts/values.yaml
            git commit -m "Resolved merge conflict in values.yaml"
          fi
      
      - name: Push Changes
        run: |
          git push origin main || echo "Push failed. Manual conflict resolution may be required."
